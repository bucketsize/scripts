#!/usr/bin/env lua

-- BP --
package.path = os.getenv("HOME")..'/scripts/?.lua;' .. package.path
local Util = require("util")
local Shell = require("shell")
--

local dirs = {
    ["~/.cache"] = {},
    ["~/.theme"] = {},
    ["~/.wlprs"] = {},
    ["~/.local/bin"] = {},
}

local bins = {
    ["bgfpid"] = {},
    ["ctrl_backlight.sh"] = {},
    ["ctrl_monitor.sh"] = {},
}

local config_group = {
    bspwm = {
        Xresources = {},
        autostart = {},
        bspwm = {state="noi"},
        alacritty = {state="noi"}
    },
    openbox = {
        Xresources = {},
        autostart = {},
        openbox = {},
        alacritty = {state="noi"}
    },
    common = {
        sxhkd = {},
        chromium = {},
        fontconfig = {},
        gtk = {},
        dunst = {},
        firefox = {},
        vim = {},
        mpd = {},
        ympd = {state="noi"},
        mpv = {},
        mxctl = {},
        lspd = {},
        tz = {},
        fseer = {},
        ["sysctl.d"] = {},
        pipewire = {}
    },
    weston = {
        weston = {},
        foot = {},
        wofi = {}
    }
}

function setup_pcbell()
    Shell.assert_exec([[
        pcnobell=$(grep -Po "^set bell-style none" /etc/inputrc)
        if [ "$pcnobell" = "" ]; then
            echo "set bell-style none" | sudo tee /etc/inputrc
        fi
    ]])
end

function setup_path()
    Shell.assert_exec([[
        if [ "" = "$(grep '\.local\/bin' ~/.bashrc | tr -d '\n')" ]; then
            echo "export PATH=\$HOME/.local/bin:\$PATH" >> ~/.bashrc
        fi
    ]])
end

function setup_dirs()
    Util:map(function(k, v)
        Shell.md (k)
    end, dirs)
end

function setup_bins()
    Util:map(function(k, v)
        Shell.ln (
            string.format("~/scripts/%s", k),
            string.format("~/.local/bin/%s", k))
    end, bins)
end

function setup_configs(name)
    Util:map(function(k, v)
        if v.state == "noi" then
            print("> " .. k .. " :noi")
        else
            print("> " .. k)
            Shell.exec(
                string.format("%s/scripts/config/%s/setup",_HOME,k))
        end
        return 0
    end, config_group[name])
end

setup_dirs()
setup_bins()
setup_path()

# weston
setup_configs("weston")
setup_configs("common")
