# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $alt Mod1

set_from_resource $fg foreground
set_from_resource $bg background
set_from_resource $fbg color9
set_from_resource $ffg color0

# colour of 	  	    <border> <background> <text> <indicator> <child_border>
client.focused          $fbg $fbg $ffg $fbg
client.focused_inactive $bg $bg $fg $bg
client.unfocused        $bg $bg $fg $bg
client.urgent           $bg $bg $ffg $bg
client.background       $bg 

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:dejavu sans 10

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

focus_follows_mouse yes

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+c kill
bindsym $alt+F4 kill

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu='dmenu -l 10'


# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split workspace
bindsym $mod+Shift+v split h
bindsym $mod+v split v

# modes
bindsym $mod+f fullscreen toggle
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+Shift+s layout toggle split
bindsym $mod+Shift+f floating toggle
bindsym $mod+space focus mode_toggle

# nav
#bindsym $mod+a focus parent
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+section exec workspacer set
bindsym $mod+Control+section exec workspacer swap
bindsym $mod+Shift+section exec workspacer move

bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

bindsym $mod+Shift+greater move workspace to output right
bindsym $mod+less move workspace to output left

bindsym $mod+x scratchpad show
bindsym $mod+shift+x move scratchpad

# bindsym Mod1+Tab workspace next
# bindsym Mod1+Shift+Tab workspace prev

bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart
bindsym $mod+l exec ~/scripts/sys_ctl/ctl.lua cmd scr_lock

#bindsym $mod+d exec dmenu_run -l 10

bindsym Print exec ~/scripts/sys_ctl/ctl.lua cmd scr_cap
bindsym Control+Print exec ~/scripts/sys_ctl/ctl.lua cmd scr_cap_sel

bindsym Control+bracketleft exec ~/scripts/sys_ctl/ctl.lua cmd vol_down
bindsym Control+bracketright exec ~/scripts/sys_ctl/ctl.lua cmd vol_up
bindsym Control+backslash exec ~/scripts/sys_ctl/ctl.lua cmd vol_mute
bindsym XF86AudioLowerVolume exec ~/scripts/sys_ctl/ctl.lua cmd vol_down
bindsym XF86AudioRaiseVolume exec ~/scripts/sys_ctl/ctl.lua cmd vol_up
bindsym XF86AudioMute exec ~/scripts/sys_ctl/ctl.lua cmd vol_mute

# music control
bindsym XF86AudioNext exec mpc next
bindsym XF86AudioPrev exec mpc prev
bindsym XF86AudioPlay exec mpc toggle
bindsym XF86AudioStop exec mpc stop

bindsym Control+2 exec ~/scripts/sys_ctl/ctl.lua cmd display2_on
bindsym Control+3 exec ~/scripts/sys_ctl/ctl.lua cmd display2_off
bindsym Control+4 exec ~/scripts/sys_ctl/ctl.lua cmd kb_led_on
bindsym Control+5 exec ~/scripts/sys_ctl/ctl.lua cmd kb_led_off

bindsym $mod+w exec ~/scripts/sys_ctl/ctl.lua fun dmenu_select_window

# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # Pressing left will shrink the window’s width.
  # Pressing right will grow the window’s width.
  # Pressing up will shrink the window’s height.
  # Pressing down will grow the window’s height.
  bindsym h resize shrink width 50 px or 2 ppt
  bindsym l resize grow width 50 px or 2 ppt
  bindsym j resize grow height 50 px or 2 ppt
  bindsym k resize shrink height 50 px or 2 ppt

  bindsym Shift+h resize shrink width 200 px or 10 ppt
  bindsym Shift+l resize grow width 200 px or 10 ppt
  bindsym Shift+j resize grow height 200 px or 10 ppt
  bindsym Shift+k resize shrink height 200 px or 10 ppt

  # same bindings, but for the arrow keys
  bindsym Left resize shrink width 50 px or 2 ppt
  bindsym Right resize grow width 50 px or 2 ppt
  bindsym Down resize grow height 50 px or 2 ppt
  bindsym Up resize shrink height 50 px or 2 ppt

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

mode "move" {
  bindsym h move left
  bindsym j move down
  bindsym k move up
  bindsym l move right

  bindsym Shift+h move left 100 px
  bindsym Shift+j move down 100 px
  bindsym Shift+k move up 100 px
  bindsym Shift+l move right 100 px

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

bindsym $mod+m mode "move"


set $Locker ~/scripts/sys_ctl/ctl.lua cmd scr_lock && sleep 1

set $mode_system System (l)ock, l(o)gout, (s)uspend, (h)ibernate, (r)eboot, shut(d)own
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym o exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym d exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+e mode "$mode_system"

bar {
	status_command i3status
	position top
	colors {
        background $bg
        statusline $fg
        separator  $bg

        # colour of border, background, and text
        focused_workspace	$ffg $fbg $ffg
        active_workspace    $ffg $fbg $ffg
        inactive_workspace  $bg $bg $fg 
        urgent_workspace    #2f343f #ebcb8b #2f343f
  }
}

#--[ EXEC ]--#
exec --no-startup-id setxkbmap us
exec --no-startup-id ~/scripts/xdg/x.wallpaper.sh cycle
exec --no-startup-id ~/scripts/sys_ctl/ctl.lua cmd display1_on
exec --no-startup-id ~/scripts/sys_ctl/ctl.lua cmd display2_off
exec --no-startup-id nm-applet --sm-disable
exec --no-startup-id ~/scripts/sys_ctl/ctl.lua fun pa_set_default
exec --no-startup-id ~/scripts/sys_ctl/ctl.lua cmd autolockd_xautolock
exec --no-startup-id ~/scripts/sys_mon/daemon.lua
exec --no-startup-id picom
exec --no-startup-id exec_always --no-startup-id dunst -lb "$bg" -nb "$bg" -cb "$bg" -lf "$fg" -bf "fg" -cf "$fg" -nf "$fg" -fn "ypn envypn 12" -s -geometry "400x60-10+40" -format "<b>%s</b>\n%b" -shrink  -lto 3 -nto 5 -cto 0 -align "left" -transparency 0 -padding 8 -horizontal_padding 8
exec --no-startup-id VBoxClient --clipboard

# exec --no-startup-id /usr/bin/blueman-applet                 # Bluetooth Manager

# window rules
for_window [class=".*"] border pixel 1
for_window [title="^floatme$"] floating enable
for_window [class="Steam" instance="Steam"] floating enable
for_window [class="Blueman-manager"] floating enable
for_window [class=Viewnior|feh|Audacious|File-roller|Lxappearance|Lxtask|Pavucontrol] floating enable
for_window [class=URxvt|Geany|Evince|Soffice|libreoffice*|mpv|Ghb|Xfburn|Gimp*|Inkscape|Vlc|Lxappearance|Audacity] focus
for_window [class=Xfburn|GParted|System-config-printer.py|Lxtask|Pavucontrol|Exo-helper*|Lxrandr|Arandr] focus



